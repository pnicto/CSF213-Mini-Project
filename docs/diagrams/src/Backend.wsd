@startuml Backend

' !theme mars from https://raw.githubusercontent.com/plantuml/plantuml/master/themes

' TODO:All the controllers

enum Role{
 ADMIN
 MANAGER
 CUSTOMER
}

' This is not gonna be a table
' Now probably it is a table
class User {
  -String username
  -String emailAddress
  -String userId
  -String phoneNumber
  -String password
  -Role role
  +String getUsername()
  +String getPhoneNumber()
  +String getUserId()
  +String getEmailAddress()
  +String getPassword()
  +String getRole()
  +String setUsername()
  +String setPhoneNumber()
  +String setUserId()
  +String setEmailAddress()
  +String setPassword()
}

' TODO:Same as manager what do?
class Admin Extends User{
  ' +void addManager()
  ' +void deleteManager()
}
' Need to check this
' For now this is a table too
' TODO:What do with the methods?
class Manager Extends User{
  ' +void addItems()
  ' +void removeItems()
  ' +void generateReports()
}


' Need to check this
class Customer Extends User{
  -float moneyInWallet
  -List<Product> productsInCart

  +float getMoneyInWallet()
  +List<Product> getProductsInCart()
  +void setMoneyInWallet()
  +void setProductsInCart()
}

' This extends JPA repository
interface AdminRepository {
  +Admin findByEmail()
}

interface ManagerRepository{
  +Manager findByEmail()
}

interface CustomerRepository{
	+Customer findByEmail()
}

class Product{
  -float price
  -int stock
  -int serialNumber
  -String description
  -String name
  -String image
  -int categoryId
  -int deiveryTime

  +float getPrice()
  +int getStock()
  +int getSerialNumber()
  +String getDescription()
  +String getName()
  +String getImage()
  +int getCategoryId()
  +int getDeliveryTime()
  +void setPrice()
  +void setStock()
  +void setDescription()
  +void setSerialNumber()
  +void setName()
  +void setImage()
  +void setCategoryId()
  +void setDeliveryTime()
}

class ProductController{
  +List<Product> getAllProducts()
  +Product getProduct()
  +void updateProductDetails()
  +void deleteProduct()
}

' class Order{
'   -Product[] products
'   -String dateOfPlaced
'   -String dateOfArrival
'   +String getDateOfPlaced()
'   +String getDateOfArrival()
'   +void getProducts()
'   +void setProducts()
'   +void setDateOfPlaced()
'   +void setDateOfArrival()
' }

' Customer o-- Product
' Product o-- Order

' Shopping cart
' TODO:Make a cart class and add products here
class ShoppingCartService{

  ' +void addProduct()
  +void getProductsInCart()
  +void removeProduct()
  +void checkoutCart()
  +void getTotal()
}

' Category
' This is is gonna be a table too
class Category{
  -int categoryId
  -String name
  +int getCategoryId()
  +String getCategoryName()
  +void setCategoryId()
  +void setCategoryName()
}

interface CategoryRepository{
  +Category findByName()
}

class CategoryController{
  +void addCategory()
  +void deleteCategory()
  +void editCategory()
}

' TODO:Order class
' Order
class Order{
  -int orderId
  -ArrayList<HashMap<Product, int>> productsInOrder
  -int customerId
  -boolean deliveryStatus
  ' Make a method to calculate the max for delivery time
  +int getOrderId()
  +int getCustomerId()
  +boolean getDeliveryStatus()
  +ArrayList<HashMap<Product, int>> getProductsInOrder()
  +void setOrderId()
  +void setCustomerId()
  +void setDeliveryStatus()
  +void setProductsInOrder()
}

' TODO:Auth class
class AuthorizationController{
  +String register()
  +String login()
}

' This extends "UserDetails" from spring security
' TODO:Login shite
class UserDetails {
  -User user
	+String getPassword()
	+String getEmail()
	+Collection<? extends GrantedAuthority> getAuthorities()
	+boolean isAccountNonExpired()
	+boolean isAccountNonLocked()
	+boolean isCredentialsNonExpired()
	+boolean isEnabled()
}

class CustomerDetailsService{
	-CustomerRepository customerRepository
	+CustomerDetails loadUserByUsername()
}

@enduml
